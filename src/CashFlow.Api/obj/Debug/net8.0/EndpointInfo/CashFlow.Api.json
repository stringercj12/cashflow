{
  "openapi": "3.0.1",
  "info": {
    "title": "CashFlow.Api",
    "version": "1.0"
  },
  "paths": {
    "/api/Expenses": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestExpenseJson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestExpenseJson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestExpenseJson"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredExpenseJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredExpenseJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredExpenseJson"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Expenses"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExpensesJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExpensesJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExpensesJson"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/Expenses/{id}": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExpenseJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExpenseJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExpenseJson"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestExpenseJson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestExpenseJson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestExpenseJson"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLoginJson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLoginJson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLoginJson"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/Report/excel": {
      "get": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "month",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/Report/pdf": {
      "get": {
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/User": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRegisterUserJson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRegisterUserJson"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRegisterUserJson"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegisteredUserJson"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrorJson"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaymentType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "RequestExpenseJson": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentType": {
            "$ref": "#/components/schemas/PaymentType"
          }
        },
        "additionalProperties": false
      },
      "RequestLoginJson": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestRegisterUserJson": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseErrorJson": {
        "type": "object",
        "properties": {
          "errorMessages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseExpenseJson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentType": {
            "$ref": "#/components/schemas/PaymentType"
          }
        },
        "additionalProperties": false
      },
      "ResponseExpensesJson": {
        "type": "object",
        "properties": {
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseShortExpenseJson"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseRegisteredExpenseJson": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseRegisteredUserJson": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseShortExpenseJson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.\r\n                      Enter 'Bearer' [space] and then your token in the text input below.\r\n                      Example: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}